{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","dist","style","color","to","id","aria-current","type","role","onClick","toggleModeRed","htmlFor","toggleModeBlue","toggleMode","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","handleonChange","event","target","value","heading","backgroundColor","onChange","rows","newText","toUpperCase","showAlert","toLowerCase","replace","split","length","About","myStyle","setMystyle","_useState3","_useState4","btntext","setBtnText","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","title","document","body","components_Alert","react_router_dist","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.bf55706a.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n  return (\n    <>\n      <nav\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n      >\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand\" style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}} to=\"/\">\n            Textutils\n          </Link>\n          <div\n            className=\"collapse navbar-collapse justify-between\"\n            id=\"navbarSupportedContent\" style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}}\n          >\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\" >\n                <Link className=\"nav-link active\" aria-current=\"page\" style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}} to=\"/\">\n                  Home\n                </Link>\n              </li>\n              <li className=\"nav-item\" >\n                <Link className=\"nav-link\" style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}} to=\"/about\">\n                  About\n                </Link>\n              </li>\n            </ul>\n\n            <ul className=\"navbar-nav me-auto mb-lg-0 \">\n              <li>\n                <div\n                  className={`form-check form-switch text-${\n                    props.mode === \"light\" ? \"red\" : \"light\"\n                  }`}\n                >\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    role=\"switch\"\n                    id=\"flexSwitchCheckDefault\"\n                    onClick={props.toggleModeRed}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexSwitchCheckDefault\"\n\n                  >\n                    RedMode\n                  </label>\n                </div>\n              </li>\n              <li>\n                <div\n                  className={`form-check form-switch text-${\n                    props.mode === \"light\" ? \"blue\" : \"light\"\n                  }`}\n                >\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    role=\"switch\"\n                    id=\"flexSwitchCheckDefault\"\n                    onClick={props.toggleModeBlue}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexSwitchCheckDefault\"\n                  >\n                    BlueMode\n                  </label>\n                </div>\n              </li>\n             \n              \n             \n              <li>\n                <div\n                  className={`form-check form-switch text-${\n                    props.mode === \"light\" ? \"dark\" : \"light\"\n                  }`}\n                >\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    role=\"switch\"\n                    id=\"flexSwitchCheckDefault\"\n                    onClick={props.toggleMode}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexSwitchCheckDefault\"\n                  >\n                    DarkMode\n                  </label>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function Textform(props) {\n  const [text, setText] = useState(\"\");\n\n  const handleUpcase = () => {\n    // console.log(\"button clicked\"+ text);\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase\" , \"success\")\n  };\n  const handleLowcase = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase\" , \"success\")\n  }; \n  const handleDeleteSpace = () => {\n    let newText = text.replace(/ /g, \"\");\n    setText(newText);\n    props.showAlert(\"Spaces are deleted\" , \"success\")\n  };\n\n  const handleonChange = (event) => {\n    // console.log(\"on change\");\n    setText(event.target.value);\n  };\n\n  return (\n    <div\n      className=\"container\"\n      style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\n    >\n      <h3 style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}}>{props.heading}</h3>\n      <div className=\"mb-3 \"></div>\n      <div className=\"mb-3\">\n        <textarea\n          className=\"form-control\"\n          style={{\n            backgroundColor:  (props.mode === \"red\" ? \"#d50b0b\" :  (props.mode === \"blue\" ? \"#1223ce\" : (props.mode === \"dark\" ? \"#1f2753\" : \"white\")) ), \n\n            color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\")),\n\n          }}\n          value={text}\n          onChange={handleonChange}\n          id=\"exampleFormControlTextarea1\"\n          rows={10}\n         \n        />\n      </div>\n      <button className=\"btn btn-primary mx-2\" onClick={handleUpcase}>\n        Convert To Uppercase\n      </button>\n      <button\n        className=\"btn btn-primary mx-2\"\n        onClick={handleLowcase}\n        onChange={handleonChange}\n      >\n        Convert To Lowercase\n      </button>\n      <button\n        className=\"btn btn-primary mx-2 my-2\"\n        onClick={handleDeleteSpace}\n        onChange={handleonChange}\n      >\n        Delete Spaces\n      </button>\n\n      <div\n        className=\"container my-3\"\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\n      >\n        <h1>Your text summary</h1>\n        <p>\n          {text.split(\" \").length} words and {text.length} characters{\" \"}\n        </p>\n        <p>{0.008 * text.split(\" \").length} minutes read</p>\n        <h2>Preview</h2>\n        <p>{text}</p>\n        <p>{text.length > 0 ? text : \"Enter your text\"}</p>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react'\n\n\nexport default function About() {\n    const [myStyle , setMystyle] = useState({\n        color: 'white',\n        backgroundColor: 'black'\n    });\n    const [btntext , setBtnText] = useState(\"Enable light mode\");\n\n   const toggleStyle = ()=>{\n    if(myStyle.color === 'white')\n    {\n        setMystyle({\n            color: 'black',\n\n            backgroundColor: 'white'\n        })\n        setBtnText(\"Enable dark Mode\");\n    }\n    else{\n        setMystyle({\n            color:'white',\n            backgroundColor:'black'\n\n        })\n        setBtnText(\"Enable light mode\");\n    }\n    \n   }\n\n    return (\n    <div className=\"container \" style={myStyle}>\n\n    <h2>About Us</h2>\n \n    <div className=\"accordion\" id=\"accordionExample\">\n    <div className=\"accordion-item\">\n      <h2 className=\"accordion-header\" id=\"headingOne\">\n        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n          Accordion Item #1\n        </button>\n      </h2>\n      <div id=\"collapseOne\" className=\"accordion-collapse collapse show \"  style={myStyle\n      } aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n        <div className=\"accordion-body\">\n          <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n        </div>\n      </div>\n    </div>\n    <div className=\"accordion-item\">\n      <h2 className=\"accordion-header\" id=\"headingTwo\">\n        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n          Accordion Item #2\n        </button>\n      </h2>\n      <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" style={myStyle\n      } aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n        <div className=\"accordion-body\">\n          <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n        </div>\n      </div>\n    </div>\n    <div className=\"accordion-item \">\n      <h2 className=\"accordion-header\" id=\"headingThree\">\n        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n          Accordion Item #3\n        </button>\n      </h2>\n      <div id=\"collapseThree\" className=\"accordion-collapse collapse \"style={myStyle\n      } aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n        <div className=\"accordion-body\">\n          <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n        </div>\n      </div>\n    </div>\n  </div>\n  <div className=\"container\">\n    <button onClick={toggleStyle} className = \"btn btn-primary my-4\">{btntext}</button>\n  </div>\n  </div>\n  )\n}\n","import React from \"react\";\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n  return (\n    props.alert && \n      <div\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\"\n      >\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n      </div>\n    \n  );\n}\n\nexport default Alert;\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport React , { useState } from 'react';\nimport Alert from './components/Alert';\n\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  \n  \n} from \"react-router-dom\";\n\nfunction App() {\nconst [mode , setMode] = useState(\"light\");\nconst [alert, setAlert] = useState(null);\n\nconst showAlert = (message , type)=>{\n   setAlert({\n    msg : message,\n    type : type  }\n   )\n\n   setTimeout(()=>{\n    setAlert(null)\n   } , 1500\n   );\n}\n\nconst toggleMode = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"dark\");\n    document.body.style.backgroundColor = '#1f2753';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Dark mode\";\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Light mode\";\n  }\n}\n\n\nconst toggleModeRed = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"red\");\n    document.body.style.backgroundColor = '#d50b0b';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Red mode\";\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Light mode\";\n  }\n}\n\n\nconst toggleModeBlue = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"blue\");\n    document.body.style.backgroundColor = '#1223ce';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Blue mode\";\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Light mode\";\n  }\n}\n\n    return (\n      <>\n\n\n     <Router>\n      <Navbar title = \"textutils\" mode={mode} toggleMode = {toggleMode}  toggleModeRed = {toggleModeRed} toggleModeBlue = {toggleModeBlue} />\n      <Alert alert={alert}/>\n\n      <div className=\"container my-3\">\n\n     <Routes>\n\n      <Route exact path='/' element={<Textform heading=\"Enter text to analyse\" mode = {mode} showAlert = {showAlert}/>} />\n        \n      <Route exact path='/about' element={<About className=\"about\"/>} />\n    \n     </Routes>\n      </div>\n     </Router>\n      </>\n    );\n  }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}