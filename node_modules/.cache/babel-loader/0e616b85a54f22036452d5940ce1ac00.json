{"ast":null,"code":"import _slicedToArray from \"/Users/rishabhyadav/Desktop/code/textutils/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rishabhyadav/Desktop/code/textutils/src/App.js\";\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nfunction App() {\n  var _useState = useState(\"light\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    mode = _useState2[0],\n    setMode = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    alert = _useState4[0],\n    setAlert = _useState4[1];\n  var showAlert = function showAlert(message, type) {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(function () {\n      setAlert(null);\n    }, 1500);\n  };\n  var toggleMode = function toggleMode() {\n    if (mode === 'light') {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#1f2753';\n      showAlert(\"Dark mode is enabled successfully\", \"success\");\n      document.title = \"TextUtils-Dark mode\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled successfully\", \"success\");\n      document.title = \"TextUtils-Light mode\";\n    }\n  };\n  var toggleModeRed = function toggleModeRed() {\n    if (mode === 'light') {\n      setMode(\"red\");\n      document.body.style.backgroundColor = '#d50b0b';\n      showAlert(\"Dark mode is enabled successfully\", \"success\");\n      document.title = \"TextUtils-Red mode\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled successfully\", \"success\");\n      document.title = \"TextUtils-Light mode\";\n    }\n  };\n  var toggleModeBlue = function toggleModeBlue() {\n    if (mode === 'light') {\n      setMode(\"blue\");\n      document.body.style.backgroundColor = '#1223ce';\n      showAlert(\"Dark mode is enabled successfully\", \"success\");\n      document.title = \"TextUtils-Blue mode\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled successfully\", \"success\");\n      document.title = \"TextUtils-Light mode\";\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    title: \"textutils\",\n    mode: mode,\n    toggleMode: toggleMode,\n    toggleModeRed: toggleModeRed,\n    toggleModeBlue: toggleModeBlue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    alert: alert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Textform, {\n    heading: \"Enter text to analyse\",\n    mode: mode,\n    showAlert: showAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(About, {\n    className: \"about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }))))));\n}\nexport default App;","map":{"version":3,"names":["Navbar","Textform","About","React","useState","Alert","BrowserRouter","Router","Switch","Route","Link","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","toggleModeRed","toggleModeBlue"],"sources":["/Users/rishabhyadav/Desktop/code/textutils/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport React , { useState } from 'react';\nimport Alert from './components/Alert';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n  \n} from \"react-router-dom\";\n\nfunction App() {\nconst [mode , setMode] = useState(\"light\");\nconst [alert, setAlert] = useState(null);\n\nconst showAlert = (message , type)=>{\n   setAlert({\n    msg : message,\n    type : type  }\n   )\n\n   setTimeout(()=>{\n    setAlert(null)\n   } , 1500\n   );\n}\n\nconst toggleMode = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"dark\");\n    document.body.style.backgroundColor = '#1f2753';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Dark mode\";\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Light mode\";\n  }\n}\n\n\nconst toggleModeRed = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"red\");\n    document.body.style.backgroundColor = '#d50b0b';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Red mode\";\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Light mode\";\n  }\n}\n\n\nconst toggleModeBlue = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"blue\");\n    document.body.style.backgroundColor = '#1223ce';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Blue mode\";\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Light mode\";\n  }\n}\n\n    return (\n      <>\n\n\n     <Router>\n      <Navbar title = \"textutils\" mode={mode} toggleMode = {toggleMode}  toggleModeRed = {toggleModeRed} toggleModeBlue = {toggleModeBlue} />\n      <Alert alert={alert}/>\n\n      <div className=\"container my-3\">\n\n      <Switch>\n      <Route  path=\"/\">\n        <Textform heading=\"Enter text to analyse\" mode = {mode} showAlert = {showAlert}/>\n      </Route>\n      <Route path=\"/about\">\n      <About className=\"about\"/>\n       \n      </Route>\n      \n    </Switch>\n      </div>\n     </Router>\n      </>\n    );\n  }\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}