{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhyadav/Desktop/code/textutils/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#1f2753';\n      showAlert(\"Dark mode is enabled successfully\", \"success\");\n      document.title;\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled successfully\", \"success\");\n    }\n  };\n  const toggleModeRed = () => {\n    if (mode === 'light') {\n      setMode(\"red\");\n      document.body.style.backgroundColor = '#d50b0b';\n      showAlert(\"Dark mode is enabled successfully\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled successfully\", \"success\");\n    }\n  };\n  const toggleModeBlue = () => {\n    if (mode === 'light') {\n      setMode(\"blue\");\n      document.body.style.backgroundColor = '#1223ce';\n      showAlert(\"Dark mode is enabled successfully\", \"success\");\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled successfully\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"textutils\",\n      mode: mode,\n      toggleMode: toggleMode,\n      toggleModeRed: toggleModeRed,\n      toggleModeBlue: toggleModeBlue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Textform, {\n        heading: \"Enter text to analyse\",\n        mode: mode,\n        showAlert: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"FPgh9vaiecmH17dMusc6W2mb4e4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Textform","React","useState","Alert","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","toggleModeRed","toggleModeBlue"],"sources":["/Users/rishabhyadav/Desktop/code/textutils/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n// import About from './components/About';\nimport React , { useState } from 'react';\nimport Alert from './components/Alert';\n\nfunction App() {\nconst [mode , setMode] = useState(\"light\");\nconst [alert, setAlert] = useState(null);\n\nconst showAlert = (message , type)=>{\n   setAlert({\n    msg : message,\n    type : type  }\n   )\n\n   setTimeout(()=>{\n    setAlert(null)\n   } , 1500\n   );\n}\n\nconst toggleMode = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"dark\");\n    document.body.style.backgroundColor = '#1f2753';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n    document.title\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n  }\n}\n\n\nconst toggleModeRed = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"red\");\n    document.body.style.backgroundColor = '#d50b0b';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n  }\n}\n\n\nconst toggleModeBlue = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"blue\");\n    document.body.style.backgroundColor = '#1223ce';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n  }\n}\n\n    return (\n      <>\n\n      <Navbar title = \"textutils\" mode={mode} toggleMode = {toggleMode}  toggleModeRed = {toggleModeRed} toggleModeBlue = {toggleModeBlue} />\n      <Alert alert={alert}/>\n\n      <div className=\"container\">\n        <Textform heading=\"Enter text to analyse\" mode = {mode} showAlert = {showAlert}/>\n      </div>\n      {/* <About className=\"about\"/> */}\n      </>\n    );\n  }\n\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA,OAAOC,KAAK,IAAKC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAAA;AAEvC,SAASC,GAAG,GAAG;EAAA;EACf,MAAM,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,OAAO,CAAC;EAC1C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,SAAS,GAAG,CAACC,OAAO,EAAGC,IAAI,KAAG;IACjCH,QAAQ,CAAC;MACRI,GAAG,EAAGF,OAAO;MACbC,IAAI,EAAGA;IAAM,CAAC,CACd;IAEDE,UAAU,CAAC,MAAI;MACdL,QAAQ,CAAC,IAAI,CAAC;IACf,CAAC,EAAG,IAAI,CACP;EACJ,CAAC;EAED,MAAMM,UAAU,GAAG,MAAI;IACrB,IAAGT,IAAI,KAAG,OAAO,EACjB;MACEC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,mCAAmC,EAAG,SAAS,CAAC;MAC1DM,QAAQ,CAACI,KAAK;IAChB,CAAC,MACG;MACFb,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,oCAAoC,EAAG,SAAS,CAAC;IAC7D;EACF,CAAC;EAGD,MAAMW,aAAa,GAAG,MAAI;IACxB,IAAGf,IAAI,KAAG,OAAO,EACjB;MACEC,OAAO,CAAC,KAAK,CAAC;MACdS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,mCAAmC,EAAG,SAAS,CAAC;IAC5D,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,oCAAoC,EAAG,SAAS,CAAC;IAC7D;EACF,CAAC;EAGD,MAAMY,cAAc,GAAG,MAAI;IACzB,IAAGhB,IAAI,KAAG,OAAO,EACjB;MACEC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,mCAAmC,EAAG,SAAS,CAAC;IAC5D,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,oCAAoC,EAAG,SAAS,CAAC;IAC7D;EACF,CAAC;EAEG,oBACE;IAAA,wBAEA,QAAC,MAAM;MAAC,KAAK,EAAG,WAAW;MAAC,IAAI,EAAEJ,IAAK;MAAC,UAAU,EAAIS,UAAW;MAAE,aAAa,EAAIM,aAAc;MAAC,cAAc,EAAIC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eACvI,QAAC,KAAK;MAAC,KAAK,EAAEd;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eAEtB;MAAK,SAAS,EAAC,WAAW;MAAA,uBACxB,QAAC,QAAQ;QAAC,OAAO,EAAC,uBAAuB;QAAC,IAAI,EAAIF,IAAK;QAAC,SAAS,EAAII;MAAU;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC7E;EAAA,gBAEH;AAEP;AAAC,GAzEML,GAAG;AAAA,KAAHA,GAAG;AA4EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}