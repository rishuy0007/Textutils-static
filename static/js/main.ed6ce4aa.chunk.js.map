{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","style","color","href","id","aria-current","type","role","onClick","toggleModeRed","htmlFor","toggleModeBlue","toggleMode","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","handleonChange","event","target","value","heading","backgroundColor","onChange","rows","newText","toUpperCase","showAlert","toLowerCase","replace","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","title","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.ed6ce4aa.chunk.js","sourcesContent":["import React from \"react\";\n// import {Link} from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n  return (\n    <>\n      <nav\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n      >\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}} href=\"#\">\n            Textutils\n          </a>\n          {/* <Link className=\"navbar-brand\" style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}} to=\"/\">\n            Textutils\n          </Link> */}\n          <div\n            className=\"collapse navbar-collapse justify-between\"\n            id=\"navbarSupportedContent\" style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}}\n          >\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\" >\n                <a className=\"nav-link active\" aria-current=\"page\" style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}} href=\"#\">\n                  Home\n                </a>\n              </li>\n\n\n              {/* <li className=\"nav-item\" >\n                <Link className=\"nav-link active\" aria-current=\"page\" style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}} to=\"/\">\n                  Home\n                </Link>\n              </li> */}\n\n\n              <li className=\"nav-item\" >\n                <a className=\"nav-link\" style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}} href=\"/about\">\n                  About\n                </a>\n              </li>\n\n\n              {/* <li className=\"nav-item\" >\n                <Link className=\"nav-link\" style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}} to=\"/about\">\n                  About\n                </Link>\n              </li> */}\n            </ul>\n\n            <ul className=\"navbar-nav me-auto mb-lg-0 \">\n              <li>\n                <div\n                  className={`form-check form-switch text-${\n                    props.mode === \"light\" ? \"red\" : \"light\"\n                  }`}\n                >\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    role=\"switch\"\n                    id=\"flexSwitchCheckDefault\"\n                    onClick={props.toggleModeRed}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexSwitchCheckDefault\"\n\n                  >\n                    RedMode\n                  </label>\n                </div>\n              </li>\n              <li>\n                <div\n                  className={`form-check form-switch text-${\n                    props.mode === \"light\" ? \"blue\" : \"light\"\n                  }`}\n                >\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    role=\"switch\"\n                    id=\"flexSwitchCheckDefault\"\n                    onClick={props.toggleModeBlue}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexSwitchCheckDefault\"\n                  >\n                    BlueMode\n                  </label>\n                </div>\n              </li>\n             \n              \n             \n              <li>\n                <div\n                  className={`form-check form-switch text-${\n                    props.mode === \"light\" ? \"dark\" : \"light\"\n                  }`}\n                >\n                  <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    role=\"switch\"\n                    id=\"flexSwitchCheckDefault\"\n                    onClick={props.toggleMode}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexSwitchCheckDefault\"\n                  >\n                    DarkMode\n                  </label>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function Textform(props) {\n  const [text, setText] = useState(\"\");\n\n  const handleUpcase = () => {\n    // console.log(\"button clicked\"+ text);\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to uppercase\" , \"success\")\n  };\n  const handleLowcase = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to lowercase\" , \"success\")\n  }; \n  const handleDeleteSpace = () => {\n    let newText = text.replace(/ /g, \"\");\n    setText(newText);\n    props.showAlert(\"Spaces are deleted\" , \"success\")\n  };\n\n  const handleonChange = (event) => {\n    // console.log(\"on change\");\n    setText(event.target.value);\n  };\n\n  return (\n    <div\n      className=\"container\"\n      style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\n    >\n      <h3 style={{color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\"))}}>{props.heading}</h3>\n      <div className=\"mb-3 \"></div>\n      <div className=\"mb-3\">\n        <textarea\n          className=\"form-control\"\n          style={{\n            backgroundColor:  (props.mode === \"red\" ? \"#d50b0b\" :  (props.mode === \"blue\" ? \"#1223ce\" : (props.mode === \"dark\" ? \"#1f2753\" : \"white\")) ), \n\n            color: props.mode === \"red\" ? \"white\" :( props.mode === \"blue\" ? \"white\" : (props.mode === \"dark\" ? \"white\" : \"black\")),\n\n          }}\n          value={text}\n          onChange={handleonChange}\n          id=\"exampleFormControlTextarea1\"\n          rows={10}\n         \n        />\n      </div>\n      <button className=\"btn btn-primary mx-2\" onClick={handleUpcase}>\n        Convert To Uppercase\n      </button>\n      <button\n        className=\"btn btn-primary mx-2\"\n        onClick={handleLowcase}\n        onChange={handleonChange}\n      >\n        Convert To Lowercase\n      </button>\n      <button\n        className=\"btn btn-primary mx-2 my-2\"\n        onClick={handleDeleteSpace}\n        onChange={handleonChange}\n      >\n        Delete Spaces\n      </button>\n\n      <div\n        className=\"container my-3\"\n        style={{ color: props.mode === \"light\" ? \"black\" : \"white\" }}\n      >\n        <h1>Your text summary</h1>\n        <p>\n          {text.split(\" \").length} words and {text.length} characters{\" \"}\n        </p>\n        <p>{0.008 * text.split(\" \").length} minutes read</p>\n        <h2>Preview</h2>\n        <p>{text}</p>\n        <p>{text.length > 0 ? text : \"Enter your text\"}</p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction Alert(props) {\n    const capitalize = (word)=>{\n        const lower = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n  return (\n    props.alert && \n      <div\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\"\n      >\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n      </div>\n    \n  );\n}\n\nexport default Alert;\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n// import About from './components/About';\nimport React , { useState } from 'react';\nimport Alert from './components/Alert';\n\n\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n  \n  \n// } from \"react-router-dom\";\n\nfunction App() {\nconst [mode , setMode] = useState(\"light\");\nconst [alert, setAlert] = useState(null);\n\nconst showAlert = (message , type)=>{\n   setAlert({\n    msg : message,\n    type : type  }\n   )\n\n   setTimeout(()=>{\n    setAlert(null)\n   } , 1500\n   );\n}\n\nconst toggleMode = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"dark\");\n    document.body.style.backgroundColor = '#1f2753';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Dark mode\";\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Light mode\";\n  }\n}\n\n\nconst toggleModeRed = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"red\");\n    document.body.style.backgroundColor = '#d50b0b';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Red mode\";\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Light mode\";\n  }\n}\n\n\nconst toggleModeBlue = ()=>{\n  if(mode==='light')\n  {\n    setMode(\"blue\");\n    document.body.style.backgroundColor = '#1223ce';\n    showAlert(\"Dark mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Blue mode\";\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode is enabled successfully\" , \"success\");\n    document.title = \"TextUtils-Light mode\";\n  }\n}\n\n    return (\n      <>\n\n{/* \n     <Router> */}\n      <Navbar title = \"textutils\" mode={mode} toggleMode = {toggleMode}  toggleModeRed = {toggleModeRed} toggleModeBlue = {toggleModeBlue} />\n      <Alert alert={alert}/>\n\n      <div className=\"container my-3\">\n\n      <Textform heading=\"Enter text to analyse\" mode = {mode} showAlert = {showAlert}/>\n    \n      {/* <Route exact path='/' element={<Textform heading=\"Enter text to analyse\" mode = {mode} showAlert = {showAlert}/>} />\n        \n\n      <Route exact path='/about' element={<About className=\"about\"/>} />\n     <Routes> */}\n     \n\n     {/* </Routes> */}\n      </div>\n     {/* </Router> */}\n      </>\n    );\n  }\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}